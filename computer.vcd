$date
	Sat Mar  4 13:15:31 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module computer_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module U0 $end
$var wire 1 ! clock_50_b7a $end
$var wire 16 # RAMwrite [15:0] $end
$var wire 1 $ RAMwe $end
$var wire 16 % RAMread [15:0] $end
$var wire 2 & RAMbe [1:0] $end
$var wire 16 ' RAMaddr [15:0] $end
$var wire 16 ( CPUwrite [15:0] $end
$var wire 1 ) CPUwe $end
$var wire 16 * CPUread [15:0] $end
$var wire 1 + CPUbe $end
$var wire 16 , CPUaddr [15:0] $end
$scope module cpu $end
$var wire 16 - MARin [15:0] $end
$var wire 16 . RAMaddr [15:0] $end
$var wire 16 / RAMin [15:0] $end
$var wire 1 ! clk $end
$var wire 3 0 f [2:0] $end
$var wire 16 1 regw [15:0] $end
$var wire 1 2 reset $end
$var wire 1 ) we $end
$var wire 4 3 state [3:0] $end
$var wire 3 4 regws [2:0] $end
$var wire 3 5 regr1s [2:0] $end
$var wire 16 6 regr1 [15:0] $end
$var wire 3 7 regr0s [2:0] $end
$var wire 16 8 regr0 [15:0] $end
$var wire 1 9 reg_load $end
$var wire 1 : ram_load $end
$var wire 2 ; op1s [1:0] $end
$var wire 2 < op0s [1:0] $end
$var wire 2 = mdrs [1:0] $end
$var wire 1 > mdr_load $end
$var wire 1 ? mar_load $end
$var wire 1 @ ir_load $end
$var wire 1 A incr_pc $end
$var wire 1 + be $end
$var wire 16 B RAMout [15:0] $end
$var wire 16 C MDRout [15:0] $end
$var wire 16 D MARout [15:0] $end
$var wire 16 E IRout [15:0] $end
$var wire 13 F IRimm [12:0] $end
$var wire 16 G ALUout [15:0] $end
$var reg 16 H MDRin [15:0] $end
$var reg 16 I op0 [15:0] $end
$var reg 16 J op1 [15:0] $end
$scope module IR $end
$var wire 1 ! clk $end
$var wire 1 2 reset $end
$var wire 1 @ load $end
$var wire 16 K in [15:0] $end
$var reg 16 L out [15:0] $end
$upscope $end
$scope module MAR $end
$var wire 1 ! clk $end
$var wire 16 M in [15:0] $end
$var wire 1 2 reset $end
$var wire 1 ? load $end
$var reg 16 N out [15:0] $end
$upscope $end
$scope module MDR $end
$var wire 1 ! clk $end
$var wire 16 O in [15:0] $end
$var wire 1 2 reset $end
$var wire 1 > load $end
$var reg 16 P out [15:0] $end
$upscope $end
$scope module alu $end
$var wire 3 Q f [2:0] $end
$var wire 16 R x [15:0] $end
$var wire 16 S y [15:0] $end
$var reg 16 T out [15:0] $end
$upscope $end
$scope module decoder $end
$var wire 1 + BE $end
$var wire 1 A INCR_PC $end
$var wire 1 @ IR_LOAD $end
$var wire 1 ? MAR_LOAD $end
$var wire 1 > MDR_LOAD $end
$var wire 1 : RAM_LOAD $end
$var wire 1 9 REG_LOAD $end
$var wire 1 ! clk $end
$var wire 16 U instr [15:0] $end
$var wire 1 V loadneg $end
$var wire 1 2 reset $end
$var wire 4 W xregws [3:0] $end
$var wire 4 X xregr1s [3:0] $end
$var wire 4 Y xregr0s [3:0] $end
$var wire 3 Z tgt2 [2:0] $end
$var wire 3 [ tgt [2:0] $end
$var wire 2 \ opcodeshort [1:0] $end
$var wire 6 ] opcodelong [5:0] $end
$var wire 4 ^ next_state [3:0] $end
$var wire 1 _ loadpos $end
$var wire 4 ` imms [3:0] $end
$var wire 8 a imm7 [7:0] $end
$var wire 10 b imm10 [9:0] $end
$var wire 1 c codetype $end
$var wire 3 d arg1 [2:0] $end
$var wire 3 e arg0 [2:0] $end
$var wire 32 f ROMread [31:0] $end
$var wire 2 g OP1S [1:0] $end
$var wire 2 h OP0S [1:0] $end
$var wire 2 i MDRS [1:0] $end
$var reg 13 j IRimm [12:0] $end
$var reg 3 k REGR0S [2:0] $end
$var reg 3 l REGR1S [2:0] $end
$var reg 3 m REGWS [2:0] $end
$var reg 8 n ROMaddr [7:0] $end
$var reg 1 o incr_pc $end
$var reg 6 p opcode [5:0] $end
$var reg 4 q state [3:0] $end
$scope function fsm_function $end
$var reg 4 r fsm_function [3:0] $end
$var reg 4 s state [3:0] $end
$upscope $end
$scope module micro $end
$var wire 8 t address [7:0] $end
$var wire 32 u data [31:0] $end
$upscope $end
$upscope $end
$scope module regfile $end
$var wire 1 ! clk $end
$var wire 1 A incr_pc $end
$var wire 3 v regr0s [2:0] $end
$var wire 3 w regr1s [2:0] $end
$var wire 16 x regw [15:0] $end
$var wire 3 y regws [2:0] $end
$var wire 1 2 reset $end
$var wire 1 9 we $end
$var reg 16 z R1 [15:0] $end
$var reg 16 { R2 [15:0] $end
$var reg 16 | R3 [15:0] $end
$var reg 16 } R4 [15:0] $end
$var reg 16 ~ R5 [15:0] $end
$var reg 16 !" R6 [15:0] $end
$var reg 16 "" R7 [15:0] $end
$var reg 16 #" regr0 [15:0] $end
$var reg 16 $" regr1 [15:0] $end
$upscope $end
$upscope $end
$scope module mem_io $end
$var wire 16 %" CPUaddr [15:0] $end
$var wire 1 + CPUbe $end
$var wire 16 &" CPUread [15:0] $end
$var wire 1 ) CPUwe $end
$var wire 16 '" CPUwrite [15:0] $end
$var wire 16 (" RAMaddr [15:0] $end
$var wire 2 )" RAMbe [1:0] $end
$var wire 1 $ RAMwe $end
$var wire 16 *" RAMwrite [15:0] $end
$var wire 16 +" addr [15:0] $end
$var wire 16 ," RAMread [15:0] $end
$var reg 2 -" be [1:0] $end
$var reg 16 ." data [15:0] $end
$var reg 16 /" wdata [15:0] $end
$upscope $end
$scope module ram $end
$var wire 16 0" address [15:0] $end
$var wire 2 1" be [1:0] $end
$var wire 1 ! clk $end
$var wire 16 2" data_in [15:0] $end
$var wire 16 3" data_out [15:0] $end
$var wire 1 $ we $end
$var reg 16 4" temp [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module register_posedge $end
$var wire 1 5" clk $end
$var wire 16 6" in [15:0] $end
$var wire 1 7" load $end
$var wire 1 8" reset $end
$var reg 16 9" out [15:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 9"
z8"
z7"
bz 6"
z5"
bx 4"
bx 3"
b0 2"
b11 1"
b0 0"
b0 /"
bx ."
b11 -"
bx ,"
b0 +"
b0 *"
b11 )"
b0 ("
b0 '"
bx &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b11 t
b0 s
b1 r
b0 q
b0 p
0o
b11 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
0c
b0 b
b0 a
b0 `
0_
b1 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
1V
b0 U
b0 T
b0 S
b0 R
bz Q
b0 P
b0 O
b0 N
b0 M
b0 L
bx K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
bx B
0A
0@
0?
0>
b0 =
b0 <
b0 ;
0:
09
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
z2
b0 1
bz 0
b0 /
b0 .
b0 -
b0 ,
0+
bx *
0)
b0 (
b0 '
b11 &
bx %
0$
b0 #
0"
0!
$end
#1
b111 5
b111 l
b111 w
b1 <
b1 h
b111 X
0V
1A
1o
b11000100000001110000000000100000 f
b11000100000001110000000000100000 u
b10 n
b10 t
b10 ^
b10 r
b1 s
b1 3
b1 q
#5
b1001011010 *
b1001011010 B
b1001011010 K
b1001011010 &"
b1001011010 ."
b1001011010 %
b1001011010 ,"
b1001011010 3"
b1001011010 4"
1!
#10
b10 -
b10 M
b10 1
b10 x
b10 G
b10 T
b10 I
b10 R
b10 6
b10 $"
b10 ""
0!
#11
1@
1?
1V
0A
0o
b11000100000001110000000000100000 f
b11000100000001110000000000100000 u
b10 n
b10 t
b11 ^
b11 r
b10 s
1_
b10 3
b10 q
#15
1!
#20
b10110 H
b10110 O
b10110 F
b10110 j
b11000100000001110000000000100000 f
b11000100000001110000000000100000 u
b10 n
b10 t
b1 '
b1 ("
b1 0"
b1 +"
b1 ]
b10110 a
b1001011 b
b1 e
b11 d
b10 [
b10 Z
b10 ,
b10 .
b10 %"
b10 D
b10 N
b1001011010 E
b1001011010 L
b1001011010 U
0!
#21
b0 -
b0 M
b0 1
b0 x
b0 G
b0 T
b0 6
b0 $"
1>
0?
b0 I
b0 R
b1001011 H
b1001011 O
b1001011 F
b1001011 j
b0 5
b0 l
b0 w
0@
b1 `
b10 <
b10 h
b0 X
0V
b100000000000000000000011000000 f
b100000000000000000000011000000 u
b0 n
b0 t
b100 ^
b100 r
b11 s
b11 3
b11 q
#25
b1000111011001010 *
b1000111011001010 B
b1000111011001010 K
b1000111011001010 &"
b1000111011001010 ."
b1000111011001010 %
b1000111011001010 ,"
b1000111011001010 3"
b1000111011001010 4"
1!
#30
b1001011 -
b1001011 M
b1001011 1
b1001011 x
b1001011 G
b1001011 T
b1001011 I
b1001011 R
b1001011 #
b1001011 *"
b1001011 2"
b1001011 /"
b1001011 (
b1001011 /
b1001011 '"
b1001011 C
b1001011 P
0!
#31
0>
1V
b100000000000000000000011000000 f
b100000000000000000000011000000 u
b0 n
b0 t
b101 ^
b101 r
b100 s
0_
b100 3
b100 q
#35
1!
#40
0!
#41
b0 -
b0 M
b0 1
b0 x
b0 G
b0 T
b0 I
b0 R
b10110 H
b10110 O
b10110 F
b10110 j
b0 <
b0 h
b0 `
0V
b0 f
b0 u
b1000000 n
b1000000 t
b110 ^
b110 r
b101 s
b101 3
b101 q
#45
1!
#50
0!
#51
1V
b1000000 n
b1000000 t
b111 ^
b111 r
b110 s
1_
b110 3
b110 q
#55
1!
#60
0!
#61
b1001011 -
b1001011 M
b1001011 1
b1001011 x
b1001011 G
b1001011 T
b1001011 I
b1001011 R
b10 4
b10 m
b10 y
b10 <
b10 h
b1010 W
0V
b10000000000001010000001000000 f
b10000000000001010000001000000 u
b10000000 n
b10000000 t
b1000 ^
b1000 r
b111 s
b111 3
b111 q
#65
1!
#70
0!
#71
19
1V
b10000000000001010000001000000 f
b10000000000001010000001000000 u
b10000000 n
b10000000 t
b1 ^
b1 r
b1000 s
0_
b1000 3
b1000 q
#75
1!
#80
b1001011 {
0!
#81
b10 -
b10 M
b10 1
b10 x
b10 G
b10 T
b10 6
b10 $"
b10 I
b10 R
b0 4
b0 m
b0 y
b111 5
b111 l
b111 w
09
b111 X
b1 <
b1 h
b0 W
0V
1A
1o
b11000100000001110000000000100000 f
b11000100000001110000000000100000 u
b10 n
b10 t
b10 ^
b10 r
b1 s
b1 3
b1 q
#85
1!
#90
b100 -
b100 M
b100 1
b100 x
b100 G
b100 T
b100 I
b100 R
b100 6
b100 $"
b100 ""
0!
#91
1@
1?
1V
0A
0o
b11000100000001110000000000100000 f
b11000100000001110000000000100000 u
b10 n
b10 t
b11 ^
b11 r
b10 s
1_
b10 3
b10 q
#95
1!
#100
b110010 H
b110010 O
b110010 F
b110010 j
b111 p
b11000100000001110000000000100000 f
b11000100000001110000000000100000 u
b10 n
b10 t
b10 '
b10 ("
b10 0"
b10 +"
1c
b111 ]
b110010 a
b111011001 b
b11 e
b1 d
b100 ,
b100 .
b100 %"
b100 D
b100 N
b1000111011001010 E
b1000111011001010 L
b1000111011001010 U
0!
#101
b0 -
b0 M
b0 1
b0 x
b0 G
b0 T
b0 6
b0 $"
1>
0?
b0 I
b0 R
b0 5
b0 l
b0 w
0@
b0 <
b0 h
b0 X
0V
b100000000000000000000000000000 f
b100000000000000000000000000000 u
b111 n
b111 t
b100 ^
b100 r
b11 s
b11 3
b11 q
#105
b1111111111111111 *
b1111111111111111 B
b1111111111111111 K
b1111111111111111 &"
b1111111111111111 ."
b1111111111111111 %
b1111111111111111 ,"
b1111111111111111 3"
b1111111111111111 4"
1!
#110
b110010 #
b110010 *"
b110010 2"
b110010 /"
b110010 (
b110010 /
b110010 '"
b110010 C
b110010 P
0!
#111
0>
1V
b100000000000000000000000000000 f
b100000000000000000000000000000 u
b111 n
b111 t
b101 ^
b101 r
b100 s
0_
b100 3
b100 q
#115
1!
#120
0!
#121
b110010 -
b110010 M
b110010 1
b110010 x
b110010 G
b110010 T
b110010 I
b110010 R
b101 7
b101 k
b101 v
b10 <
b10 h
b101 Y
0V
b10000000010100000000000001000000 f
b10000000010100000000000001000000 u
b1000111 n
b1000111 t
b110 ^
b110 r
b101 s
b101 3
b101 q
#125
1!
#130
0!
#131
1?
1V
b10000000010100000000000001000000 f
b10000000010100000000000001000000 u
b1000111 n
b1000111 t
b111 ^
b111 r
b110 s
1_
b110 3
b110 q
#135
1!
#140
b11001 '
b11001 ("
b11001 0"
b11001 +"
b110010 ,
b110010 .
b110010 %"
b110010 D
b110010 N
0!
#141
b1001011 H
b1001011 O
b1001011 -
b1001011 M
b1001011 1
b1001011 x
b1001011 G
b1001011 T
b1001011 8
b1001011 #"
1>
0?
b1001011 I
b1001011 R
b10 7
b10 k
b10 v
b1 ;
b1 g
b10 =
b10 i
b0 <
b0 h
b1010 Y
0V
b101000101000000000100000001000 f
b101000101000000000100000001000 u
b10000111 n
b10000111 t
b1000 ^
b1000 r
b111 s
b111 3
b111 q
#145
bx *
bx B
bx K
bx &"
bx ."
bx %
bx ,"
bx 3"
bx 4"
1!
#150
b1001011 #
b1001011 *"
b1001011 2"
b1001011 /"
b1001011 (
b1001011 /
b1001011 '"
b1001011 C
b1001011 P
0!
#151
1$
1)
1:
0>
1V
b101000101000000000100000001000 f
b101000101000000000100000001000 u
b10000111 n
b10000111 t
b1 ^
b1 r
b1000 s
0_
b1000 3
b1000 q
#155
1!
#160
0!
#161
b100 -
b100 M
b100 1
b100 x
b100 G
b100 T
b100 6
b100 $"
b0 8
b0 #"
b0 J
b0 S
b100 I
b100 R
b110010 H
b110010 O
b111 5
b111 l
b111 w
b0 7
b0 k
b0 v
0$
0)
0:
b1 <
b1 h
b111 X
b0 ;
b0 g
b0 =
b0 i
b0 Y
0V
1A
1o
b11000100000001110000000000100000 f
b11000100000001110000000000100000 u
b10 n
b10 t
b10 ^
b10 r
b1 s
b1 3
b1 q
#165
b1001011 *
b1001011 B
b1001011 K
b1001011 &"
b1001011 ."
b1001011 %
b1001011 ,"
b1001011 3"
b1001011 4"
1!
#170
b110 -
b110 M
b110 1
b110 x
b110 G
b110 T
b110 I
b110 R
b110 6
b110 $"
b110 ""
0!
#171
1@
1?
1V
0A
0o
b11000100000001110000000000100000 f
b11000100000001110000000000100000 u
b10 n
b10 t
b11 ^
b11 r
b10 s
1_
b10 3
b10 q
#175
1!
#180
b10010 H
b10010 O
b10010 F
b10010 j
b0 p
b11000100000001110000000000100000 f
b11000100000001110000000000100000 u
b10 n
b10 t
b11 '
b11 ("
b11 0"
b11 +"
0c
b0 ]
b10010 a
b1001 b
b1 e
b11 [
b11 Z
b110 ,
b110 .
b110 %"
b110 D
b110 N
b1001011 E
b1001011 L
b1001011 U
0!
#181
b1001011 -
b1001011 M
b1001011 1
b1001011 x
b1001011 G
b1001011 T
b0 6
b0 $"
1>
0?
b1001011 I
b1001011 R
b1001 H
b1001 O
b1001 F
b1001 j
b0 5
b0 l
b0 w
0@
b1 `
b10 <
b10 h
b0 X
0V
b100000000000000000000011000000 f
b100000000000000000000011000000 u
b0 n
b0 t
b100 ^
b100 r
b11 s
b11 3
b11 q
#185
b1111111111111111 *
b1111111111111111 B
b1111111111111111 K
b1111111111111111 &"
b1111111111111111 ."
b1111111111111111 %
b1111111111111111 ,"
b1111111111111111 3"
b1111111111111111 4"
1!
#190
b1001 -
b1001 M
b1001 1
b1001 x
b1001 G
b1001 T
b1001 I
b1001 R
b1001 #
b1001 *"
b1001 2"
b1001 /"
b1001 (
b1001 /
b1001 '"
b1001 C
b1001 P
0!
#191
0>
1V
b100000000000000000000011000000 f
b100000000000000000000011000000 u
b0 n
b0 t
b101 ^
b101 r
b100 s
0_
b100 3
b100 q
#195
1!
#200
0!
