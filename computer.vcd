$date
	Sun Mar  5 13:10:31 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module computer_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module U0 $end
$var wire 1 ! clock_50_b7a $end
$var wire 16 # RAMwrite [15:0] $end
$var wire 1 $ RAMwe $end
$var wire 16 % RAMread [15:0] $end
$var wire 2 & RAMbe [1:0] $end
$var wire 16 ' RAMaddr [15:0] $end
$var wire 16 ( CPUwrite [15:0] $end
$var wire 1 ) CPUwe $end
$var wire 16 * CPUread [15:0] $end
$var wire 1 + CPUbe $end
$var wire 16 , CPUaddr [15:0] $end
$scope module cpu $end
$var wire 16 - MARin [15:0] $end
$var wire 16 . RAMaddr [15:0] $end
$var wire 16 / RAMin [15:0] $end
$var wire 1 ! clk $end
$var wire 1 0 incr_pc_out $end
$var wire 1 1 incr_pc_temp $end
$var wire 1 2 loadneg $end
$var wire 16 3 regw [15:0] $end
$var wire 1 4 reset $end
$var wire 1 ) we $end
$var wire 4 5 state [3:0] $end
$var wire 3 6 regws [2:0] $end
$var wire 3 7 regr1s [2:0] $end
$var wire 16 8 regr1 [15:0] $end
$var wire 3 9 regr0s [2:0] $end
$var wire 16 : regr0 [15:0] $end
$var wire 1 ; reg_load $end
$var wire 1 < ram_load $end
$var wire 2 = op1s [1:0] $end
$var wire 2 > op0s [1:0] $end
$var wire 2 ? mdrs [1:0] $end
$var wire 1 @ mdr_load $end
$var wire 1 A mar_load $end
$var wire 1 B ir_load $end
$var wire 1 C incr_pc $end
$var wire 1 D cond_chk $end
$var wire 3 E cond [2:0] $end
$var wire 1 + be $end
$var wire 16 F RAMout [15:0] $end
$var wire 16 G MDRout [15:0] $end
$var wire 16 H MARout [15:0] $end
$var wire 16 I IRout [15:0] $end
$var wire 13 J IRimm [12:0] $end
$var wire 16 K ALUout [15:0] $end
$var wire 3 L ALUfunc [2:0] $end
$var reg 16 M MDRin [15:0] $end
$var reg 16 N op0 [15:0] $end
$var reg 16 O op1 [15:0] $end
$var reg 1 P skip $end
$scope module IR $end
$var wire 1 ! clk $end
$var wire 1 4 reset $end
$var wire 1 B load $end
$var wire 16 Q in [15:0] $end
$var reg 16 R out [15:0] $end
$upscope $end
$scope module MAR $end
$var wire 1 ! clk $end
$var wire 16 S in [15:0] $end
$var wire 1 4 reset $end
$var wire 1 A load $end
$var reg 16 T out [15:0] $end
$upscope $end
$scope module MDR $end
$var wire 1 ! clk $end
$var wire 16 U in [15:0] $end
$var wire 1 4 reset $end
$var wire 1 @ load $end
$var reg 16 V out [15:0] $end
$upscope $end
$scope module alu $end
$var wire 16 W x [15:0] $end
$var wire 16 X y [15:0] $end
$var wire 3 Y f [2:0] $end
$var reg 16 Z out [15:0] $end
$upscope $end
$scope module decoder $end
$var wire 1 + BE $end
$var wire 1 C INCR_PC $end
$var wire 1 B IR_LOAD $end
$var wire 1 A MAR_LOAD $end
$var wire 1 @ MDR_LOAD $end
$var wire 1 < RAM_LOAD $end
$var wire 1 ; REG_LOAD $end
$var wire 1 ! clk $end
$var wire 16 [ instr [15:0] $end
$var wire 1 \ loadneg $end
$var wire 1 4 reset $end
$var wire 4 ] xregws [3:0] $end
$var wire 4 ^ xregr1s [3:0] $end
$var wire 4 _ xregr0s [3:0] $end
$var wire 3 ` tgt2 [2:0] $end
$var wire 3 a tgt [2:0] $end
$var wire 2 b opcodeshort [1:0] $end
$var wire 6 c opcodelong [5:0] $end
$var wire 4 d next_state [3:0] $end
$var wire 1 e loadpos $end
$var wire 4 f imms [3:0] $end
$var wire 8 g imm7 [7:0] $end
$var wire 13 h imm13 [12:0] $end
$var wire 10 i imm10 [9:0] $end
$var wire 2 j condtype [1:0] $end
$var wire 1 k codetype $end
$var wire 3 l arg1 [2:0] $end
$var wire 3 m arg0 [2:0] $end
$var wire 40 n ROMread [39:0] $end
$var wire 2 o OP1S [1:0] $end
$var wire 2 p OP0S [1:0] $end
$var wire 2 q MDRS [1:0] $end
$var wire 1 D COND_CHK $end
$var wire 3 r ALUfunc [2:0] $end
$var reg 13 s IRimm [12:0] $end
$var reg 3 t REGR0S [2:0] $end
$var reg 3 u REGR1S [2:0] $end
$var reg 3 v REGWS [2:0] $end
$var reg 8 w ROMaddr [7:0] $end
$var reg 3 x cond [2:0] $end
$var reg 5 y immir [4:0] $end
$var reg 1 z incr_pc $end
$var reg 6 { opcode [5:0] $end
$var reg 4 | state [3:0] $end
$scope function fsm_function $end
$var reg 4 } fsm_function [3:0] $end
$var reg 4 ~ state [3:0] $end
$upscope $end
$scope module micro $end
$var wire 8 !" address [7:0] $end
$var wire 40 "" data [39:0] $end
$upscope $end
$upscope $end
$scope module regfile $end
$var wire 1 ! clk $end
$var wire 1 0 incr_pc $end
$var wire 3 #" regr0s [2:0] $end
$var wire 3 $" regr1s [2:0] $end
$var wire 16 %" regw [15:0] $end
$var wire 3 &" regws [2:0] $end
$var wire 1 4 reset $end
$var wire 1 ; we $end
$var reg 16 '" R1 [15:0] $end
$var reg 16 (" R2 [15:0] $end
$var reg 16 )" R3 [15:0] $end
$var reg 16 *" R4 [15:0] $end
$var reg 16 +" R5 [15:0] $end
$var reg 16 ," R6 [15:0] $end
$var reg 16 -" R7 [15:0] $end
$var reg 16 ." regr0 [15:0] $end
$var reg 16 /" regr1 [15:0] $end
$upscope $end
$upscope $end
$scope module mem_io $end
$var wire 16 0" CPUaddr [15:0] $end
$var wire 1 + CPUbe $end
$var wire 16 1" CPUread [15:0] $end
$var wire 1 ) CPUwe $end
$var wire 16 2" CPUwrite [15:0] $end
$var wire 16 3" RAMaddr [15:0] $end
$var wire 2 4" RAMbe [1:0] $end
$var wire 1 $ RAMwe $end
$var wire 16 5" RAMwrite [15:0] $end
$var wire 16 6" addr [15:0] $end
$var wire 16 7" RAMread [15:0] $end
$var reg 2 8" be [1:0] $end
$var reg 16 9" data [15:0] $end
$var reg 16 :" wdata [15:0] $end
$upscope $end
$scope module ram $end
$var wire 16 ;" address [15:0] $end
$var wire 2 <" be [1:0] $end
$var wire 1 ! clk $end
$var wire 16 =" data_in [15:0] $end
$var wire 16 >" data_out [15:0] $end
$var wire 1 $ we $end
$var reg 16 ?" temp [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module computer_tb $end
$scope module U0 $end
$scope module ram $end
$var reg 16 @" \memory[0] [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module computer_tb $end
$scope module U0 $end
$scope module ram $end
$var reg 16 A" \memory[1] [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module computer_tb $end
$scope module U0 $end
$scope module ram $end
$var reg 16 B" \memory[2] [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module computer_tb $end
$scope module U0 $end
$scope module ram $end
$var reg 16 C" \memory[3] [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module computer_tb $end
$scope module U0 $end
$scope module ram $end
$var reg 16 D" \memory[4] [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module computer_tb $end
$scope module U0 $end
$scope module ram $end
$var reg 16 E" \memory[5] [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module computer_tb $end
$scope module U0 $end
$scope module ram $end
$var reg 16 F" \memory[6] [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module computer_tb $end
$scope module U0 $end
$scope module ram $end
$var reg 16 G" \memory[7] [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module computer_tb $end
$scope module U0 $end
$scope module ram $end
$var reg 16 H" \memory[8] [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx H"
bx G"
bx F"
bx E"
bx D"
b1111111111111111 C"
b1111111111111111 B"
b1010110000001001 A"
b1000000000001001 @"
bx ?"
bx >"
b0 ="
b11 <"
b0 ;"
b0 :"
bx 9"
b11 8"
bx 7"
b0 6"
b0 5"
b11 4"
b0 3"
b0 2"
bx 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b11 !"
b0 ~
b1 }
b0 |
b0 {
0z
b1 y
b0 x
b11 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
0k
b0 j
b0 i
b0 h
b0 g
b0 f
0e
b1 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
1\
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
bx Q
0P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
bx F
b0 E
0D
0C
0B
0A
0@
b0 ?
b0 >
b0 =
0<
0;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
z4
b0 3
12
01
00
b0 /
b0 .
b0 -
b0 ,
0+
bx *
0)
b0 (
b0 '
b11 &
bx %
0$
b0 #
0"
0!
$end
#1
1A
b111 7
b111 u
b111 $"
b1 >
b1 p
b111 ^
0\
02
b1100010000000111000000000010000000000000 n
b1100010000000111000000000010000000000000 ""
b10 w
b10 !"
b10 d
b10 }
b1 ~
1e
b1 5
b1 |
#5
b1000000000001001 *
b1000000000001001 F
b1000000000001001 Q
b1000000000001001 1"
b1000000000001001 9"
b1000000000001001 %
b1000000000001001 7"
b1000000000001001 >"
b1000000000001001 ?"
1!
#10
0!
#11
10
11
1B
1C
0A
1\
12
b1100010000000111000000000010000000000000 n
b1100010000000111000000000010000000000000 ""
b10 w
b10 !"
b11 d
b11 }
b10 ~
0e
b10 5
b10 |
#15
1!
#20
b10 M
b10 U
b10 -
b10 S
b10 3
b10 %"
b10 K
b10 Z
b10 J
b10 s
b1100010000000111000000000010000000000000 n
b1100010000000111000000000010000000000000 ""
b10 w
b10 !"
b10 N
b10 W
1k
b10 g
b1 i
b1001 h
b1 l
b1 a
b1 `
b10 8
b10 /"
b1000000000001001 I
b1000000000001001 R
b1000000000001001 [
b10 -"
0!
#21
b0 -
b0 S
b0 3
b0 %"
b0 K
b0 Z
b0 8
b0 /"
01
1@
b0 N
b0 W
b1 M
b1 U
b1 J
b1 s
b0 7
b0 u
b0 $"
0B
0C
00
b1 f
b10 >
b10 p
b0 ^
0A
0\
02
b10000000000000000000001100000000000000 n
b10000000000000000000001100000000000000 ""
b0 w
b0 !"
b100 d
b100 }
b11 ~
1e
b11 5
b11 |
#25
b1 -
b1 S
b1 3
b1 %"
b1 K
b1 Z
b1 N
b1 W
b1 #
b1 5"
b1 ="
b1 :"
b1 (
b1 /
b1 2"
b1 G
b1 V
1!
#30
0!
#31
0@
1\
12
b10000000000000000000001100000000000000 n
b10000000000000000000001100000000000000 ""
b0 w
b0 !"
b101 d
b101 }
b100 ~
0e
b100 5
b100 |
#35
1!
#40
0!
#41
b0 -
b0 S
b0 3
b0 %"
b0 K
b0 Z
b0 N
b0 W
b10 M
b10 U
b10 J
b10 s
b0 >
b0 p
b0 f
0@
0\
02
b0 n
b0 ""
b1000000 w
b1000000 !"
b110 d
b110 }
b101 ~
1e
b101 5
b101 |
#45
1!
#50
0!
#51
1\
12
b1000000 w
b1000000 !"
b111 d
b111 }
b110 ~
0e
b110 5
b110 |
#55
1!
#60
0!
#61
b1 -
b1 S
b1 3
b1 %"
b1 K
b1 Z
b1 N
b1 W
b1 6
b1 v
b1 &"
b10 >
b10 p
b1010 ]
0\
02
b1000000000000101000000100000000000000 n
b1000000000000101000000100000000000000 ""
b10000000 w
b10000000 !"
b1000 d
b1000 }
b111 ~
1e
b111 5
b111 |
#65
1!
#70
0!
#71
1;
1\
12
b1000000000000101000000100000000000000 n
b1000000000000101000000100000000000000 ""
b10000000 w
b10000000 !"
b1 d
b1 }
b1000 ~
0e
b1000 5
b1000 |
#75
1!
#80
b1 '"
0!
#81
b10 -
b10 S
b10 3
b10 %"
b10 K
b10 Z
b10 8
b10 /"
1A
b10 N
b10 W
b0 6
b0 v
b0 &"
b111 7
b111 u
b111 $"
0;
b111 ^
b1 >
b1 p
b0 ]
0\
02
b1100010000000111000000000010000000000000 n
b1100010000000111000000000010000000000000 ""
b10 w
b10 !"
b10 d
b10 }
b1 ~
1e
b1 5
b1 |
#85
b1 '
b1 3"
b1 ;"
b1 6"
b10 ,
b10 .
b10 0"
b10 H
b10 T
1!
#90
0!
#91
10
11
1B
1C
0A
1\
12
b1100010000000111000000000010000000000000 n
b1100010000000111000000000010000000000000 ""
b10 w
b10 !"
b11 d
b11 }
b10 ~
0e
b10 5
b10 |
#95
b1010110000001001 *
b1010110000001001 F
b1010110000001001 Q
b1010110000001001 1"
b1010110000001001 9"
b1010110000001001 %
b1010110000001001 7"
b1010110000001001 >"
b1010110000001001 ?"
1!
#100
b100 -
b100 S
b100 3
b100 %"
b100 K
b100 Z
b10110 {
b1100010000000111000000000010000000000000 n
b1100010000000111000000000010000000000000 ""
b10 w
b10 !"
b100 N
b100 W
b10110 c
b1 b
b110000001 i
b110000001001 h
b100 8
b100 /"
b1010110000001001 I
b1010110000001001 R
b1010110000001001 [
b100 -"
0!
#101
b0 -
b0 S
b0 3
b0 %"
b0 K
b0 Z
b0 8
b0 /"
01
1@
b0 N
b0 W
b1 M
b1 U
b1 J
b1 s
b0 7
b0 u
b0 $"
0B
0C
00
b11 f
b0 >
b0 p
b0 ^
0A
0\
02
b10000000000000000000011000000000000000 n
b10000000000000000000011000000000000000 ""
b10110 w
b10110 !"
b100 d
b100 }
b11 ~
1e
b11 5
b11 |
#105
1!
#110
0!
#111
0@
1\
12
b10000000000000000000011000000000000000 n
b10000000000000000000011000000000000000 ""
b10110 w
b10110 !"
b101 d
b101 }
b100 ~
0e
b100 5
b100 |
#115
1!
#120
0!
#121
b10 M
b10 U
b10 J
b10 s
b0 f
0@
0\
02
b0 n
b0 ""
b1010110 w
b1010110 !"
b110 d
b110 }
b101 ~
1e
b101 5
b101 |
#125
1!
#130
0!
#131
1\
12
b1010110 w
b1010110 !"
b111 d
b111 }
b110 ~
0e
b110 5
b110 |
#135
1!
#140
0!
#141
b1 O
b1 X
11
b1 8
b1 /"
b0 -
b0 S
b0 3
b0 %"
b0 K
b0 Z
1P
b1 N
b1 W
b1 7
b1 u
b1 $"
b1 L
b1 Y
b1 r
1D
b1 =
b1 o
b10 >
b10 p
b1001 ^
0\
02
b1001000000000100100100100000 n
b1001000000000100100100100000 ""
b10010110 w
b10010110 !"
b1000 d
b1000 }
b111 ~
1e
b111 5
b111 |
#145
1!
#150
0!
#151
10
1\
12
b1001000000000100100100100000 n
b1001000000000100100100100000 ""
b10010110 w
b10010110 !"
b1 d
b1 }
b1000 ~
0e
b1000 5
b1000 |
#155
1!
#160
b110 -"
0!
#161
b110 N
b110 W
01
b110 8
b110 /"
1A
b110 -
b110 S
b110 3
b110 %"
b110 K
b110 Z
0P
b0 O
b0 X
b111 7
b111 u
b111 $"
00
b0 L
b0 Y
b0 r
0D
b0 =
b0 o
b1 >
b1 p
b111 ^
0\
02
b1100010000000111000000000010000000000000 n
b1100010000000111000000000010000000000000 ""
b10 w
b10 !"
b10 d
b10 }
b1 ~
1e
b1 5
b1 |
#165
b11 '
b11 3"
b11 ;"
b11 6"
b110 ,
b110 .
b110 0"
b110 H
b110 T
1!
#170
0!
#171
10
11
1B
1C
0A
1\
12
b1100010000000111000000000010000000000000 n
b1100010000000111000000000010000000000000 ""
b10 w
b10 !"
b11 d
b11 }
b10 ~
0e
b10 5
b10 |
#175
b1111111111111111 *
b1111111111111111 F
b1111111111111111 Q
b1111111111111111 1"
b1111111111111111 9"
b1111111111111111 %
b1111111111111111 7"
b1111111111111111 >"
b1111111111111111 ?"
1!
#180
b1111111 M
b1111111 U
b1000 -
b1000 S
b1000 3
b1000 %"
b1000 K
b1000 Z
b1111111 J
b1111111 s
b11111 y
b111111 {
b1100010000000111000000000010000000000000 n
b1100010000000111000000000010000000000000 ""
b10 w
b10 !"
b1000 N
b1000 W
b111111 c
b11 b
b1111111 g
b1111111111 i
b1111111111111 h
b111 m
b111 l
b111 a
b11 `
b1000 8
b1000 /"
b1111111111111111 I
b1111111111111111 R
b1111111111111111 [
b1000 -"
0!
#181
b0 -
b0 S
b0 3
b0 %"
b0 K
b0 Z
b0 8
b0 /"
01
b0 N
b0 W
b0 7
b0 u
b0 $"
0B
0C
00
b0 >
b0 p
b0 ^
0A
0\
02
b0 n
b0 ""
b111111 w
b111111 !"
b100 d
b100 }
b11 ~
1e
b11 5
b11 |
#185
1!
#190
0!
#191
1\
12
b111111 w
b111111 !"
b101 d
b101 }
b100 ~
0e
b100 5
b100 |
#195
1!
#200
0!
